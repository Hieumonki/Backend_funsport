const Favorite = require("../model/favorite");

// ‚úÖ Th√™m s·∫£n ph·∫©m y√™u th√≠ch
const addFavorite = async (req, res) => {
  try {
    // üîπ Ki·ªÉm tra req.user
    if (!req.user || !req.user.id) {
      return res.status(401).json({ message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ch∆∞a ƒëƒÉng nh·∫≠p" });
    }

    const userId = req.user.id;
    const { productId } = req.body;

    if (!productId) {
      return res.status(400).json({ message: "productId kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng" });
    }

    // üîπ Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i
    const exists = await Favorite.findOne({ userId, productId });
    if (exists) {
      // tr·∫£ v·ªÅ 200 k√®m favorite hi·ªán c√≥ ƒë·ªÉ frontend kh√¥ng b·ªã l·ªói
      const populated = await Favorite.findById(exists._id).populate("productId");
      return res.status(200).json(populated);
    }

    // üîπ T·∫°o m·ªõi favorite
    const favorite = new Favorite({ userId, productId });
    await favorite.save();

    // üîπ Populate productId an to√†n
    const populatedFavorite = await Favorite.findById(favorite._id).populate("productId");

    res.status(201).json(populatedFavorite);
  } catch (err) {
    console.error("‚ùå L·ªói addFavorite:", err);
    res.status(500).json({ message: "L·ªói server", error: err.message });
  }
};

// ‚úÖ L·∫•y danh s√°ch favorites c·ªßa user
const getFavoritesByUser = async (req, res) => {
  try {
    if (!req.user || !req.user.id) {
      return res.status(401).json({ message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ch∆∞a ƒëƒÉng nh·∫≠p" });
    }

    const userId = req.user.id;
    const favorites = await Favorite.find({ userId }).populate("productId");

    res.json(favorites);
  } catch (err) {
    console.error("‚ùå L·ªói getFavoritesByUser:", err);
    res.status(500).json({ message: "L·ªói server", error: err.message });
  }
};

// ‚úÖ Xo√° favorite theo _id
const removeFavorite = async (req, res) => {
  try {
    const { id } = req.params;
    const deleted = await Favorite.findByIdAndDelete(id);

    if (!deleted) {
      return res.status(404).json({ message: "Kh√¥ng t√¨m th·∫•y favorite" });
    }

    res.json({ message: "ƒê√£ xo√° kh·ªèi y√™u th√≠ch" });
  } catch (err) {
    console.error("‚ùå L·ªói removeFavorite:", err);
    res.status(500).json({ message: "L·ªói server", error: err.message });
  }
};

module.exports = { addFavorite, getFavoritesByUser, removeFavorite };
