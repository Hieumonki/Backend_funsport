// controllers/favoriteCon.js
const Favorite = require('../model/favorite.js');

// üìå L·∫•y danh s√°ch favorite c·ªßa user t·ª´ token
const getFavorites = async (req, res) => {
  try {
    const favorites = await Favorite.find({ userId: req.user.id });
    res.json(favorites);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói server', error: err.message });
  }
};

// üìå Th√™m s·∫£n ph·∫©m y√™u th√≠ch (l∆∞u tr·ª±c ti·∫øp name, image, price)
const addFavorite = async (req, res) => {
  try {
    const { name, image, price } = req.body;

    if (!name || !image || !price) {
      return res.status(400).json({ message: 'Thi·∫øu th√¥ng tin s·∫£n ph·∫©m' });
    }

    // Check tr√πng
    const exists = await Favorite.findOne({ userId: req.user.id, name });
    if (exists) {
      return res.status(400).json({ message: 'S·∫£n ph·∫©m ƒë√£ c√≥ trong y√™u th√≠ch' });
    }

    const favorite = new Favorite({
      userId: req.user.id,
      name,
      image,
      price
    });

    await favorite.save();
    res.json(favorite);
  } catch (err) {
    res.status(500).json({ message: 'L·ªói server', error: err.message });
  }
};

// üìå Xo√° s·∫£n ph·∫©m kh·ªèi favorite theo _id
const removeFavorite = async (req, res) => {
  try {
    const { id } = req.params; // id = _id c·ªßa favorite
    const deleted = await Favorite.findOneAndDelete({ userId: req.user.id, _id: id });

    if (!deleted) {
      return res.status(404).json({ message: 'Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m trong y√™u th√≠ch' });
    }

    res.json({ message: 'Xo√° th√†nh c√¥ng' });
  } catch (err) {
    res.status(500).json({ message: 'L·ªói server', error: err.message });
  }
};

module.exports = { getFavorites, addFavorite, removeFavorite };
